// Generated by BUCKLESCRIPT VERSION 1.7.5, PLEASE EDIT WITH CARE
'use strict';

import * as Block             from "bs-platform/lib/es6/block.js";
import * as Tea_cmd           from "bucklescript-tea/lib/es6/src/tea_cmd.js";
import * as Overbots_flags    from "./overbots_flags.js";
import * as Overbots_actions  from "./overbots_actions.js";
import * as Overbots_resource from "./overbots_resource.js";

function button_cost(_, param) {
  if (param !== 0) {
    return /* :: */[
            /* tuple */[
              /* Energy */0,
              25.0
            ],
            /* [] */0
          ];
  } else {
    return /* :: */[
            /* tuple */[
              /* Energy */0,
              50.0
            ],
            /* [] */0
          ];
  }
}

function button_enabled(model, param) {
  if (param !== 0) {
    if (Overbots_flags.bool_flag_exists(/* DrillDeployed */3, model)) {
      return /* false */0;
    } else {
      return Overbots_flags.bool_flag_exists(/* SolarPanelsGenerating */2, model);
    }
  } else if (Overbots_flags.bool_flag_exists(/* SolarPanelsGenerating */2, model)) {
    return /* false */0;
  } else {
    return Overbots_flags.bool_flag_exists(/* SolarPanelsReadyToUnfold */1, model);
  }
}

function button_temporarily_disabled(model, button) {
  if (button !== 0) {
    return +(Overbots_resource.cost_resources(button_cost(model, /* DeployDrill */1), model) === /* None */0);
  } else {
    return +(Overbots_resource.cost_resources(button_cost(model, button), model) === /* None */0);
  }
}

function button_actions(_, param) {
  if (param !== 0) {
    return /* :: */[
            /* ActionSetBoolFlag */Block.__(2, [/* DrillDeployed */3]),
            /* :: */[
              /* ActionAddMsg */Block.__(0, ["Now that I've started acquiring resources I need to activate my internal refineries to prepare the resources for use"]),
              /* [] */0
            ]
          ];
  } else {
    return /* :: */[
            /* ActionSetFloatFlag */Block.__(6, [
                /* BasicSolarPanelSelfGeneration */0,
                1.0
              ]),
            /* :: */[
              /* ActionSetBoolFlag */Block.__(2, [/* SolarPanelsGenerating */2]),
              /* :: */[
                /* ActionClearBoolFlag */Block.__(3, [/* SolarPanelsReadyToUnfold */1]),
                /* :: */[
                  /* ActionAddMsg */Block.__(0, ["Energy is now being generated, now to acquire simple minerals by drilling"]),
                  /* [] */0
                ]
              ]
            ]
          ];
  }
}

function perform_button(orig_model, id) {
  if (!button_enabled(orig_model, id) || button_temporarily_disabled(orig_model, id)) {
    return /* tuple */[
            orig_model,
            Tea_cmd.none
          ];
  } else {
    var match = Overbots_resource.cost_resources(button_cost(orig_model, id), orig_model);
    if (match) {
      var model = match[0];
      var model$1 = Overbots_actions.perform_actions(model, button_actions(model, id));
      return /* tuple */[
              model$1,
              Tea_cmd.none
            ];
    } else {
      return /* tuple */[
              orig_model,
              Tea_cmd.none
            ];
    }
  }
}

var displayed_buttons = /* :: */[
  /* tuple */[
    "Perform",
    "perform",
    /* :: */[
      /* tuple */[
        /* UnfoldSolarPanels */0,
        "unfold-solar-panels",
        "Unfold Solar Panels"
      ],
      /* :: */[
        /* tuple */[
          /* DeployDrill */1,
          "deploy-drill",
          "Deploy Drill"
        ],
        /* [] */0
      ]
    ]
  ],
  /* [] */0
];

export {
  displayed_buttons           ,
  button_cost                 ,
  button_enabled              ,
  button_temporarily_disabled ,
  button_actions              ,
  perform_button              ,
  
}
/* Overbots_flags Not a pure module */
