// Generated by BUCKLESCRIPT VERSION 1.7.5, PLEASE EDIT WITH CARE
'use strict';

import * as List              from "bs-platform/lib/es6/list.js";
import * as Block             from "bs-platform/lib/es6/block.js";
import * as Tea_cmd           from "bucklescript-tea/lib/es6/src/tea_cmd.js";
import * as Caml_array        from "bs-platform/lib/es6/caml_array.js";
import * as Pervasives        from "bs-platform/lib/es6/pervasives.js";
import * as Overbots_flags    from "./overbots_flags.js";
import * as Overbots_resource from "./overbots_resource.js";

function perform_action(model, param) {
  if (typeof param === "number") {
    return model;
  } else {
    switch (param.tag | 0) {
      case 0 : 
          var newrecord = model.slice();
          newrecord[/* msgs */3] = /* :: */[
            /* TimeMsg */[
              model[/* gametime */2],
              param[0]
            ],
            model[/* msgs */3]
          ];
          return newrecord;
      case 1 : 
          var match = Overbots_resource.add_resource_value(param[0], param[1], model);
          if (typeof match === "number") {
            return model;
          } else {
            return match[0];
          }
      case 2 : 
          return Overbots_flags.bool_flag_set(param[0], model);
      case 3 : 
          return Overbots_flags.bool_flag_reset(param[0], model);
      case 4 : 
          return Overbots_flags.int_flag_set(param[0], param[1], model);
      case 5 : 
          return Overbots_flags.int_flag_add(param[0], param[1], model);
      case 6 : 
          return Overbots_flags.float_flag_set(param[0], param[1], model);
      case 7 : 
          return Overbots_flags.float_flag_add(param[0], param[1], model);
      
    }
  }
}

function perform_actions(model, actions) {
  return Overbots_resource.reset_cache(List.fold_left(perform_action, model, actions));
}

function init_timeaction(at, actions) {
  return /* record */[
          /* at */at,
          /* actions */actions
        ];
}

var timeactions = /* array */[
  /* record */[
    /* at */0.0,
    /* actions : :: */[
      /* ActionAddResourceAmount */Block.__(1, [
          /* Energy */0,
          100.0
        ]),
      /* :: */[
        /* ActionSetFloatFlag */Block.__(6, [
            /* BasicSolarPanelSelfGeneration */0,
            100.0
          ]),
        /* [] */0
      ]
    ]
  ],
  /* record */[
    /* at */1.0,
    /* actions : :: */[
      /* ActionAddMsg */Block.__(0, ["Hmm, what is going on?"]),
      /* [] */0
    ]
  ],
  /* record */[
    /* at */3.0,
    /* actions : :: */[
      /* ActionSetBoolFlag */Block.__(2, [/* InternalPowerEnabled */0]),
      /* :: */[
        /* ActionAddMsg */Block.__(0, ["I appear to be getting power through an umbillica interface, however the data connection across it appears to be down..."]),
        /* [] */0
      ]
    ]
  ],
  /* record */[
    /* at */5.0,
    /* actions : :: */[
      /* ActionAddMsg */Block.__(0, ["Running diagnostics..."]),
      /* [] */0
    ]
  ],
  /* record */[
    /* at */7.0,
    /* actions : :: */[
      /* ActionAddMsg */Block.__(0, ["Minor damage detected, appears to be old micrometeroite impacts, armor has deflected damage from internal systems"]),
      /* [] */0
    ]
  ],
  /* record */[
    /* at */10.0,
    /* actions : :: */[
      /* ActionAddMsg */Block.__(0, ["Supposed to be getting instructions from the umbillica, and the activation of power from it signifies that I am being activated to work"]),
      /* [] */0
    ]
  ],
  /* record */[
    /* at */12.5,
    /* actions : :: */[
      /* ActionAddMsg */Block.__(0, ["However, no information has come down, likely the primary craft has been damaged by micrometeroites as well, hence its inability to communicate instructions"]),
      /* [] */0
    ]
  ],
  /* record */[
    /* at */15.0,
    /* actions : :: */[
      /* ActionAddMsg */Block.__(0, ["Fallback instructions are to acquire resources and prepare for settlement and/or re-acquisition"]),
      /* [] */0
    ]
  ],
  /* record */[
    /* at */20.0,
    /* actions : :: */[
      /* ActionAddMsg */Block.__(0, ["Velocity sensors are showing that acceleration has not occurred, which should already have happened if I've been reactived"]),
      /* [] */0
    ]
  ],
  /* record */[
    /* at */25.0,
    /* actions : :: */[
      /* ActionAddMsg */Block.__(0, ["Accelleration is now occurring..."]),
      /* [] */0
    ]
  ],
  /* record */[
    /* at */30.0,
    /* actions : :: */[
      /* ActionAddMsg */Block.__(0, ["Vector is not changing, which indicates orbital entry is not being accounted for..."]),
      /* [] */0
    ]
  ],
  /* record */[
    /* at */35.0,
    /* actions : :: */[
      /* ActionAddMsg */Block.__(0, ["Most probable explanation is that the accelleration is from the primary ship entering a planetery atmosphere without the engines firing"]),
      /* [] */0
    ]
  ],
  /* record */[
    /* at */40.0,
    /* actions : :: */[
      /* ActionAddMsg */Block.__(0, ["The primary ship does have a breaking system that can be deployed in the event of engine failure, the acceleration profile indicates that is what is occuring"]),
      /* [] */0
    ]
  ],
  /* record */[
    /* at */50.0,
    /* actions : :: */[
      /* ActionAddMsg */Block.__(0, ["Waiting to be deployed..."]),
      /* [] */0
    ]
  ],
  /* record */[
    /* at */60.0,
    /* actions : :: */[
      /* ActionSetFloatFlag */Block.__(6, [
          /* BasicSolarPanelSelfGeneration */0,
          -0.5
        ]),
      /* :: */[
        /* ActionAddMsg */Block.__(0, ["Confirmed, deployment has started, primary ship has launched me out in the landing assembly, umbillica is detached from the primary ship"]),
        /* [] */0
      ]
    ]
  ],
  /* record */[
    /* at */70.0,
    /* actions : :: */[
      /* ActionAddMsg */Block.__(0, ["Acceleration profile indicates the landing assembly parachutes have been deployed"]),
      /* [] */0
    ]
  ],
  /* record */[
    /* at */80.0,
    /* actions : :: */[
      /* ActionSetBoolFlag */Block.__(2, [/* SolarPanelsReadyToUnfold */1]),
      /* :: */[
        /* ActionAddMsg */Block.__(0, ["Touchdown!  Landing assembly is unfolding.  I now need to deploy my solar energy collectors before my energy is too low to do so."]),
        /* [] */0
      ]
    ]
  ],
  /* record */[
    /* at */Pervasives.max_float,
    /* actions : [] */0
  ]
];

function update_timeactions(model, time) {
  var idx = Overbots_flags.int_flag_value(/* TimeActionIdx */0, model);
  var match = Caml_array.caml_array_get(timeactions, idx);
  if (time < match[/* at */0]) {
    return /* tuple */[
            model,
            Tea_cmd.none
          ];
  } else {
    var model$1 = perform_actions(model, match[/* actions */1]);
    var model$2 = Overbots_flags.int_flag_add(/* TimeActionIdx */0, 1, model$1);
    return /* tuple */[
            model$2,
            Tea_cmd.none
          ];
  }
}

export {
  perform_action     ,
  perform_actions    ,
  init_timeaction    ,
  timeactions        ,
  update_timeactions ,
  
}
/* Overbots_flags Not a pure module */
